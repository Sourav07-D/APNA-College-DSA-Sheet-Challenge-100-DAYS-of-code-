

class Solution
{
    ArrayList<Integer> countDistinct(int arr[], int n, int k)
    {
    //   ArrayList<Integer> ans=new ArrayList<>();
    //   for(int i=0;i<=n-k;i++)
    //   {
    //       HashSet<Integer> set=new HashSet<>();
    //       for(int j=i;j<i+k;j++)
    //       {
    //           set.add(arr[j]);
    //       }
    //       ans.add(set.size());
    //   }
    //   return ans;
     ArrayList<Integer> list = new ArrayList<>();
        HashMap<Integer, Integer> map = new HashMap<>();
        int i = 0;
        while(i <= k - 2) 
        {
            map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
            i++;
        }
        
        i--;
        int j = -1;
        while(i < n-1) 
        {
            i++;
            map.put(arr[i], map.getOrDefault(arr[i], 0) + 1); // acquire
            list.add(map.size()); // work
            // release
            j++;
            int freq = map.get(arr[j]);
            if(freq==1) map.remove(arr[j]);
            else map.put(arr[j], freq -1);
        }
        
        return list;
    }
}
