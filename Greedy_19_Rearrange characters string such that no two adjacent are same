

class Solution
{
public static String rearrangeCharacters(String str) {
        
        HashMap<Character,Integer> hm = new HashMap<>();
        for(int i=0 ; i<str.length() ; i++){
            char ch =str.charAt(i);
            hm.put(ch,hm.getOrDefault(ch,0)+1);
        }
        
        PriorityQueue<Pair> pq = new PriorityQueue<>();
        for(char k : hm.keySet()){
            pq.add(new Pair(k,hm.get(k)));
        }
        
        StringBuilder ans = new StringBuilder("");
        Pair temp = new Pair('#',0);
        
        while(pq.size()>0){
            Pair prev = pq.poll();
            ans.append(prev.ch);
            prev.freq -=1;
            if(temp.freq>0){
                pq.add(temp); //add again to priority Queue
            }
            temp = prev;
        }
        if(ans.length() == str.length()){
            return ans.toString();
        }else{
            return "-1";
        }
        
    }
    public static class Pair implements Comparable<Pair>{
        char ch;
        int freq;
        Pair(char ch,int freq){
            this.ch  = ch;
            this.freq = freq;
        }
        public int compareTo(Pair p1){
            return p1.freq-this.freq;
        }
    }
}
