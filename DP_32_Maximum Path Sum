static int maximumPath(int N, int Matrix[][])
    {
        
        int dp[][] = new int[N][N];
        
        //for 1st row
        for(int i = 0 ; i<N ; i++){
          dp[0][i] = Matrix[0][i];
        }
        
        for(int row = 1 ; row<N ; row++){
            for(int col = 0 ; col<N ; col++){
                
                int down = Matrix[row][col] + dp[row-1][col];
                
                int left = (int)(-1e9 + 7) , right = (int)(-1e9 + 7);
                
                if(col-1 >= 0) left = Matrix[row][col] + dp[row-1][col-1];
                if(col+1 < N) right = Matrix[row][col] + dp[row-1][col+1];
                
                dp[row][col] = Math.max(down , Math.max(left , right));
            }
        }
        
        int ans = 0;
        for(int i = 0 ; i<N ; i++){
           ans = Math.max(dp[N-1][i] , ans);
       }
       
       return ans;
    }
