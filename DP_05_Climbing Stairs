class Solution {
     public  int ClimbStair(int n,int[] dp)
    {
        if(n==0)
        {
            return 1;
        }
        if(n<0)
        {
            return 0;
        }
        if(dp[n]!=-1)
        {
            return dp[n];

        }
        dp[n]=ClimbStair(n-1,dp)+ClimbStair(n-2,dp);
        return dp[n];

    }
    public int climbStairs(int n) {
    //   Memo
        int[] dp=new int[n+1];
    //     Arrays.fill(dp,-1);
    //    return ClimbStair(n,dp);

    dp[0]=1;
    for(int i=1;i<dp.length;i++)
    {
        if(i==1)
        {
            dp[i]=dp[i-1];
        }else
        {
            dp[i]=dp[i-1]+dp[i-2];
        }
    }
return dp[n];
    }
}
